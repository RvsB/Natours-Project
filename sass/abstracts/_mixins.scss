@mixin clearfix {  //The clearfix, for those unaware, is a CSS hack that solves a persistent bug that occurs when two floated elements are stacked next to each other. When elements are aligned this way, the parent container ends up with a height of 0, and it can easily wreak havoc on a layout
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin center-vertical-horizontal {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}


//MEDIA QUERY MANAGER
/*
0-600px:       Phone
600-900px:     Tablet Potrait
900-1200px:    Tablet Landscape
[1200-1800px]  is where our normal styles apply
1800px + :     Big desktop
*/


// @mixin  respond-phone {
//     @media (max-width: 600px) { @content };
// }


/*
$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER FOR WRITING QUERIES : base + typography > general layout + grid > page layout > components 

1em = 16px and this value will change if the user increases the dafault font size of the browser

**in media queries the ems and rems dont work as intended, they follow the browser default font size and not the one which we set, so if we are following 1rem = 10px here it wont be like that, here 1rem =16px, it doesnt matter what we specify one rem to be it will always follow the browser default
*/

@mixin respond($breakpoint) {
    @if  $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content };  //600px
    }

    @if  $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content };    //900px
    }

    @if  $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content };    //1200px
    }

    @if  $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };    //1800px +
    }
}